on:
  push:
    tags:
      - 'v[0-9]+.*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release

jobs:
  initial_release:
    name: Create base release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  release_assets:
    name: Release assets
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          # Linux
          - {os: ubuntu-latest, toolchain: stable, target: x86_64-unknown-linux-gnu, rustflags: lto, cross: false}
          - {os: ubuntu-latest, toolchain: stable, target: aarch64-unknown-linux-gnu, rustflags: lto, cross: true}
          - {os: ubuntu-latest, toolchain: stable, target: arm-unknown-linux-gnueabi, rustflags: lto, cross: true}
          - {os: ubuntu-latest, toolchain: stable, target: armv7-unknown-linux-gnueabihf, rustflags: lto, cross: true}
          # mips and powerpc are not compitble with ring v0.16.10, so they are disabled for now
#          - {os: ubuntu-latest, target: mips64el-unknown-linux-gnuabi64, cross: true}
#          - {os: ubuntu-latest, target: powerpc64le-unknown-linux-gnu, cross: true}
          - {os: ubuntu-latest, toolchain: stable,  target: x86_64-unknown-linux-musl, rustflags: lto, cross: true}
          - {os: ubuntu-latest, toolchain: stable, target: aarch64-linux-android, rustflags: lto, cross: true}
          # Macos
          - {os: macos-latest, toolchain: stable, target: x86_64-apple-darwin, rustflags: lto, cross: false}
          # Windows
          - {os: windows-latest, toolchain: stable-x86_64-pc-windows-gnu, target: x86_64-pc-windows-gnu, rustflags: lto, cross: false}
          - {os: windows-latest, toolchain: stable-x86_64-pc-windows-msvc, target: x86_64-pc-windows-msvc, rustflags: lto target-feature=+crt-static, cross: false}
    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.config.toolchain }}
          target: ${{ matrix.config.target }}
          override: true
          default: true

      - name: Checkout code
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Build jormungandr
        uses: actions-rs/cargo@v1
        env:
          RUSTLAGS: ${{ matrix.config.rustflags }}
        with:
          use-cross: ${{ matrix.config.cross }}
          command: rustc
          args: --release --target ${{ matrix.config.target }} -p jormungandr --bin jormungandr -- -C ${{ matrix.config.rustflags }}

      - name: Build jcli
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.config.cross }}
          command: rustc
          args: --release --target ${{ matrix.config.target }} -p jcli --bin jcli -- -C ${{ matrix.config.rustflags }}

      - name: Get tag version
        id: get_version
        run: echo ::set-output name=VERSION::``${GITHUB_REF#refs/tags/}``
        shell: bash

      - name: Pack binaries if unix
        if: matrix.config.os != 'windows-latest'
        run: tar -C ./target/${{ matrix.config.target }}/release -czvf jormungandr-${{ steps.get_version.outputs.VERSION }}-${{ matrix.config.target }}.tar.gz jormungandr jcli

      - name: Pack binaries if windows
        if: matrix.config.os == 'windows-latest'
        run: compress-archive ./target/${{ matrix.config.target }}/release/jormungandr.exe, ./target/${{ matrix.config.target }}/release/jcli.exe jormungandr-${{ steps.get_version.outputs.VERSION }}-${{ matrix.config.target }}.zip

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: jormungandr-${{ steps.get_version.outputs.VERSION }}-${{ matrix.config.target }}.*
          asset_name: jormungandr-${{ steps.get_version.outputs.VERSION }}-${{ matrix.config.target }}
          tag: ${{ github.ref }}
          file_glob: true
          overwrite: true
